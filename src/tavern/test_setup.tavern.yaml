test_name: Setup a registered and verified user

stages:
  - name: Cleanup workspace, if dirty
    request:
      url: "{tavern.env_vars.PROJECT_API_HOST}/info/"
      verify: false
      method: GET
    response:
      save:
        $ext:
          function: src.utils.workspacehelper:init_workspace
          extra_kwargs:
            env_api_host: "{tavern.env_vars.PROJECT_API_HOST}"
            username: "{test_username:s}"
            password: "{test_password:s}"

  - name: Register new user
    request:
      url: "{tavern.env_vars.PROJECT_API_HOST}/auth/user/register/"
      verify: false
      method: POST
      json:
        username: "{test_username:s}"
        email: "{test_email:s}"
        password: "{test_password:s}"
        time_zone: America/Chicago
    response:
      status_code: 201

  - name: Get verification code from email
    request:
      url: "{tavern.env_vars.PROJECT_API_HOST}/info/"
      verify: false
      method: GET
    response:
      save:
        $ext:
          function: src.utils.emailhelper:get_verification_code
          extra_kwargs:
            username: "{test_username:s}"

  - name: Verify user
    request:
      url: "{tavern.env_vars.PROJECT_API_HOST}/auth/user/verify/?username={test_username:s}&code={email_verification_code}&welcome-email=false"
      verify: false
      method: GET
    response:
      status_code: 202

---

test_name: Authenticate and wait

marks:
  - usefixtures:
      - access_token

stages:
  - name: Wait for example schedule
    request:
      url: "{tavern.env_vars.PROJECT_API_HOST}/info/"
    response:
      status_code: 200
      save:
        $ext:
          function: src.utils.workspacehelper:wait_for_example_schedule
          extra_kwargs:
            env_api_host: "{tavern.env_vars.PROJECT_API_HOST}"
            access_token: "{access_token:s}"